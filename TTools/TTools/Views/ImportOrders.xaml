<UserControl x:Class="TTools.Views.ImportOrders"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TTools.Views"
             xmlns:m="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1200">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Green.Named.Primary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>


    <m:DialogHost IsOpen="{Binding IsDialogOpen}" DialogContent="{Binding DialogContent}"
                  CloseOnClickAway="False" >
        
        <DockPanel>
            <Grid Margin="25 10 25 0 ">
                <DataGrid Name="DG1" DockPanel.Dock="Left" HorizontalAlignment="Left"
                      ItemsSource="{Binding Path=DisplayOrderItems , UpdateSourceTrigger=PropertyChanged }"
                      SelectedItem="{Binding SelectedRowItem}" AutoGenerateColumns="False"
                      CanUserSortColumns="True" CanUserAddRows="False" EnableRowVirtualization="True"
                      m:DataGridAssist.CellPadding="13 8 8 8" 
                      m:DataGridAssist.ColumnHeaderPadding="8" >
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding IsChecked,UpdateSourceTrigger=PropertyChanged}"
                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                            <DataGridCheckBoxColumn.Header>
                                <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                                    <CheckBox   HorizontalAlignment="Center" VerticalAlignment="Center"
                                            DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                            IsChecked="{Binding CheckBoxColumnIsChecked}" 
                                            Command= "{Binding CheckAllCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}"/>
                                </Border>
                            </DataGridCheckBoxColumn.Header>
                        </DataGridCheckBoxColumn>
                        <m:MaterialDataGridTextColumn Header="伝票No" MaxLength="1000"
                                                               Binding="{Binding OrderItem.伝票ＮＯ}"                                                      
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                        <m:MaterialDataGridTextColumn Header="商品コード" MaxLength="1000" 
                                                               Binding="{Binding OrderItem.商品コード}"                                                      
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                        <m:MaterialDataGridTextColumn Header="商品名" MaxLength="1000" 
                                                               Binding="{Binding OrderItem.商品名}"                                                     
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"  />
                        <m:MaterialDataGridTextColumn Header="契約番号" MaxLength="1000"
                                                               Binding="{Binding OrderItem.契約番号}"                                                     
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"  />
                    </DataGrid.Columns>
                </DataGrid>

                <StackPanel DockPanel.Dock="Right" Width="150" HorizontalAlignment="Right" Orientation="Vertical">
                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource MaterialDesignHeadlineTextBlock}">Commands</TextBlock>
                    <!--Reload-->
                    <Button Name="ReloadBT" Content="Reload" Margin="0 10 0 10" Command="{Binding ReloadCommand,UpdateSourceTrigger=PropertyChanged}"/>
                    <!--Unload-->
                    <Button Name="UnloadBT" Content="Unload" Margin="0 10 0 10" Command="{Binding UnloadCommand}"/>
                    <!--Import-->
                    <Button Name="ImportBT" Content="Import" Margin="0 10 0 10" Command="{Binding ImportCheckedItemsCommand}"/>
                    <!--伝送フラグ-->

                    <m:PackIcon Kind="FlagOutline" />
                    <TextBox Margin="0 16 0 0"
                         Text="{Binding SendedFlag,UpdateSourceTrigger=PropertyChanged}" 
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}" >
                        <m:HintAssist.Hint>
                            <StackPanel   Margin="-2 0 0 0" Orientation="Horizontal">
                                <TextBlock Text="伝送フラグ"/>
                            </StackPanel>
                        </m:HintAssist.Hint>
                    </TextBox>


                    <DatePicker Margin="0 16 0 0"
                            SelectedDate="{Binding UpdateDate,UpdateSourceTrigger=PropertyChanged,ValidatesOnNotifyDataErrors=True}"
                            Language="ja-JP" m:HintAssist.Hint="更新日付"
                            Style="{StaticResource MaterialDesignFloatingHintDatePicker}"/>

                    <!--カテゴリー-->
                    <GroupBox Margin="0 16 0 0" Grid.Column="0" Header="表示カテゴリー">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <RadioButton Grid.Row="0" Grid.Column="0" Name="ShowAll" Content="全て"
                                     VerticalAlignment="Center" HorizontalAlignment="Left"
                                     Command="{Binding CategoryChangeCommand}" CommandParameter="ShowAll"/>
                            <RadioButton Grid.Row="1" Grid.Column="0" Name="ShowMachine" Content="製品"
                                     VerticalAlignment="Center" HorizontalAlignment="Left"
                                     Command="{Binding CategoryChangeCommand}" CommandParameter="Machine"/>
                            <RadioButton Grid.Row="2" Grid.Column="0" Name="ShowBS" Content="BS"
                                     VerticalAlignment="Center" HorizontalAlignment="Left"
                                     Command="{Binding CategoryChangeCommand}" CommandParameter="BS"/>
                            <RadioButton Grid.Row="3" Grid.Column="0" Name="ShowPL" Content="PL"
                                     VerticalAlignment="Center" HorizontalAlignment="Left"
                                     Command="{Binding CategoryChangeCommand}" CommandParameter="PL"/>



                            <TextBlock Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right"
                                   FontStretch="SemiCondensed" VerticalAlignment="Center"
                                   Text="{Binding AllCategoryCount}"/>
                            <TextBlock Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right"
                                   FontStretch="SemiCondensed" VerticalAlignment="Center"
                                   Text="{Binding MachineCategoryCount}"/>
                            <TextBlock Grid.Row="2" Grid.Column="2" HorizontalAlignment="Right"
                                   FontStretch="SemiCondensed" VerticalAlignment="Center"
                                   Text="{Binding BsCategoryCount}"/>
                            <TextBlock Grid.Row="3" Grid.Column="2" HorizontalAlignment="Right"
                                   FontStretch="SemiCondensed" VerticalAlignment="Center"
                                   Text="{Binding PlCategoryCount}"/>
                        </Grid>
                    </GroupBox>


                    <Button Name="TestBT" Content="Test"
                        Margin="0 10 0 10" 
                        Command="{Binding OpenDialogCommand}"/>

                </StackPanel>

                <m:Snackbar MessageQueue="{Binding MyMessageQueue}" IsActive="{Binding IsSnackbarActive}" />
                
            </Grid>
        </DockPanel>

    </m:DialogHost>
    
</UserControl>
